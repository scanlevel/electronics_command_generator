사전 생성 및 TTS 생성 과정 (자동 X)

1. FINAL_DICT 로 사전 생성 후 result에 존재하는 command*.txt 를 가져옵니다.
2. 가져온 파일의 이름을 command.txt로 변경합니다.
3. 해당 파일을 TTS_script 에 있는 command_data 폴더에 넣으면 됩니다.

현재 TTS 목소리는 6개입니다.

######################################################################################################
FINAL_DICT
명령어 생성기 사용 방법

해당 폴더 내 requirements.txt를 이용하여 의존성 설치 후
main.py를 실행합니다.


# 명령어 생성 목적이면
# 차례대로 1, 2, 2 를 입력하면 됩니다.

다음과 같은 화면이 나타납니다.
###################################
실행시킬 파일을 선택하세요:
0. 종료
1. generate_commands.py
2. cluster_by_class.py
3. tag_valid_test.py
4. cluster_by_device_name.py
번호 입력 (0~4): 
###################################

0. 종료
- 프로그램을 종료합니다

1. 명령어 생성기 실행
- 명령어 생성기를 실행합니다.
- ./result/ 에 저장됩니다.
- 명령어를 3개의 파일로 저장합니다.
    - command.txt - 전체 명령어가 포함됩니다.
    - command_cardinal.txt - 서수가 포함된 명령어가 모입니다.
    - command_normal.txt - 서수가 포함되지 않은 명령어가 모입니다.
- 해당 명령어 파일을 사용하면 됩니다.
- 사전 추가 방법.docx 와 ./data/ 내부의 "USER_CONFIG.json" 을 이용하여 생성되는 명령어를 늘리거나 줄일 수 있습니다.
- 특정 가전만을 또는 전체 가전을 생성할 수 있습니다.
- 사전에 정의된 숫자를 사용할 지, 아니면 랜덤한 숫자만을 생성할지 설정할 수 있습니다.
- 현재 사전에는 숫자가 1개만 나오도록 고정되어있습니다. 범위를 늘리거나 줄여 숫자를 조절할 수 있습니다.



2. 클래스별 분류 실행 
- 행동 분류 별 사용되는 명령어의 공통 어휘 사전을 생성합니다.
- ./result/ 에 저장됩니다.

3. 태그 오류 검사기 실행
-  DATA 내부 사전의 TAG가 올바른지 검사합니다. 만약 오류가 있다면 자동으로 수정합니다.
- data/ 내부가 수정됩니다.

4. 기기별 분류 실행 
- 기기별 사용되는 명령어의 공통 어휘 사전을 생성합니다. 
- ./result/ 에 저장됩니다.

######################################################################################################

TTS_script

TTS 생성기
conda 환경 ( python 3.9 권장 ) 을 만들고 activate 합니다.
startup.sh 를 실행하여 환경 생성 및 의존성 설치를 진행합니다.
requirements.txt 에 대한 설치도 starup.sh 에 포함되어있습니다.

########## 사용과정 ###########

main.py를 실행하여 생성합니다.
1을 누를경우 전체 커맨드에서 기기별로 몇 개의 명령어만 랜덤으로 뽑아 생성합니다.
2는 전체 생성입니다.

########## 사용되는 TTS는 2종류가 있습니다 #######
    1. melo_tts.py
    2. pnu_tts.py

    결과는 각각 ./melo_result, ./pnu_result 하위에 생성됩니다.


1. 각 파일을 실행하면 현재 경로에 존재하는 command_sample.txt를 한 줄 씩 읽어와 가전별로 폴더를 만들어 생성합니다.
2. 각 폴더 내부에는 {가전이름}.txt 로 전사데이터가 생성됩니다.
3. 해당 텍스트 파일의 각 줄은 다음과 같이 이루어져 있습니다.
    {파일명} / {전사데이터}